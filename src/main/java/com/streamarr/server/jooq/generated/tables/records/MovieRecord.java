/*
 * This file is generated by jOOQ.
 */
package com.streamarr.server.jooq.generated.tables.records;


import com.streamarr.server.jooq.generated.tables.Movie;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MovieRecord extends UpdatableRecordImpl<MovieRecord> implements Record4<UUID, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.movie.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.movie.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.movie.artwork</code>.
     */
    public void setArtwork(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.movie.artwork</code>.
     */
    public String getArtwork() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.movie.tmdb_id</code>.
     */
    public void setTmdbId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.movie.tmdb_id</code>.
     */
    public String getTmdbId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.movie.content_rating</code>.
     */
    public void setContentRating(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.movie.content_rating</code>.
     */
    public String getContentRating() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Movie.MOVIE.ID;
    }

    @Override
    public Field<String> field2() {
        return Movie.MOVIE.ARTWORK;
    }

    @Override
    public Field<String> field3() {
        return Movie.MOVIE.TMDB_ID;
    }

    @Override
    public Field<String> field4() {
        return Movie.MOVIE.CONTENT_RATING;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getArtwork();
    }

    @Override
    public String component3() {
        return getTmdbId();
    }

    @Override
    public String component4() {
        return getContentRating();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getArtwork();
    }

    @Override
    public String value3() {
        return getTmdbId();
    }

    @Override
    public String value4() {
        return getContentRating();
    }

    @Override
    public MovieRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public MovieRecord value2(String value) {
        setArtwork(value);
        return this;
    }

    @Override
    public MovieRecord value3(String value) {
        setTmdbId(value);
        return this;
    }

    @Override
    public MovieRecord value4(String value) {
        setContentRating(value);
        return this;
    }

    @Override
    public MovieRecord values(UUID value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MovieRecord
     */
    public MovieRecord() {
        super(Movie.MOVIE);
    }

    /**
     * Create a detached, initialised MovieRecord
     */
    public MovieRecord(UUID id, String artwork, String tmdbId, String contentRating) {
        super(Movie.MOVIE);

        setId(id);
        setArtwork(artwork);
        setTmdbId(tmdbId);
        setContentRating(contentRating);
    }
}
